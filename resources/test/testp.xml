<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="1.cpp"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;iostream&gt;</cpp:file></cpp:include>
  <using>using <namespace>namespace <name>std</name>;</namespace></using>

  <function><type><name>void</name></type> <name>f</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
    <if>if <condition>(   <expr><name>x</name> <operator>&gt;</operator>   <literal type="number">0</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><name>t</name> <operator>=</operator>   <literal type="number">1</literal></expr>;</expr_stmt>
      }</block></then><else>else<block>{
      <expr_stmt><expr><name>t</name><operator>=</operator><literal type="number">2</literal></expr>;</expr_stmt>
      }</block></else></if>
    }</block></function>

  <function><type><name>void</name></type> <name>g</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{
    <decl_stmt><decl><type><name>int</name></type> <name>t</name></decl>;</decl_stmt>
    <if>if <condition>(<expr><name>x</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
      <expr_stmt><expr><name>t</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
      }</block></then> <else>else <block>{
      <expr_stmt><expr><name>t</name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
      }</block></else></if>
    }</block></function>
  <function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name><name>argv</name><index>[]</index></name></decl></parameter>)</parameter_list> <block>{

    <expr_stmt><expr><call><name>f</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name>g</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return>return <expr><literal type="number">0</literal></expr>;</return>
    }</block></function>


</unit>