<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="test3.cpp"><function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list> <block>{
	<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>,<decl><type ref="prev"/><name>b</name></decl>,<decl><type ref="prev"/><name>c</name></decl>,<decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>

	<expr_stmt><expr><name>a</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

	<if>if <condition>(<expr><name>a</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>d</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	}</block></then></if>

	<if>if <condition>(<expr><name>a</name> <operator>&gt;</operator> <literal type="number">0.5</literal></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>d</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	}</block></then></if>

	<if>if <condition>(<expr><name>a</name> <operator>&lt;</operator> <literal type="number">1.2</literal></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>d</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	}</block></then></if>

	<if>if <condition>(<expr><name>c</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>a</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>b</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>d</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
	}</block></then></if>
	
	<if>if <condition>(<expr><name>a</name> <operator>&gt;</operator> <name>b</name></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>d</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>	
	}</block></then></if>
	
	<if>if <condition>(<expr><name>b</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>a</name> <operator>&gt;</operator> <call><name><name>f</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <name>a</name> <operator>&gt;</operator> <call><name>g</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
		<expr_stmt><expr><name>a</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>
	}</block></then></if>

}</block></function>
</unit>
